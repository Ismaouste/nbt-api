security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    users_in_memory: { memory: null }
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: lazy
      provider: users_in_memory

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
      - { path: ^/api/artists, roles: IS_AUTHENTICATED_ANONYMOUSLY, method:["GET, POST, PUT, DELETE"] }
      - { path: ^/api/concert, roles: IS_AUTHENTICATED_ANONYMOUSLY, method:["GET, POST, PUT, DELETE"] }
      - { path: ^/api/user, roles: IS_AUTHENTICATED_ANONYMOUSLY, method:["GET, POST, PUT, DELETE"] }
      - { path: ^/api/lineup, roles: IS_AUTHENTICATED_ANONYMOUSLY, method:["GET, POST, PUT, DELETE"] }
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }
